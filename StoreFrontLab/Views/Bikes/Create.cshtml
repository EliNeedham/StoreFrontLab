@model StoreFrontLab.DATA.EF.Bike

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Bikes", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Bike</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.BikeModel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BikeModel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BikeModel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.BikeTypeID, "BikeTypeID", htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("Bike Type")
        <div class="col-md-10">
            @Html.DropDownList("BikeTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BikeTypeID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="clear"></div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitsSold, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitsSold, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitsSold, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.TireID, "TireID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TireID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TireID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.BikeStatusID, "Bike Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BikeStatusID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BikeStatusID, "", new { @class = "text-danger" })
        </div>
        <div class="clear"></div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.BikeMakeID, "BikeMakeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BikeMakeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BikeMakeID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <label class="control-label col-md-2" for="BikeMake">Manufacturer</label>
        <input type="text" name="BikeMake" class="form-control col-md-10" />
    </div>
    @* TODO figure out if not having the drop down is creating new manufacturers or recognizing the text as an existing manufacturer - if not fix it.  *@

    <div class="form-group">
        @Html.LabelFor(model => model.IsSiteFeature, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsSiteFeature)
                @Html.ValidationMessageFor(model => model.IsSiteFeature, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clear"></div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BikeImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="bikeImage" />

            @Html.ValidationMessageFor(model => model.BikeImage, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    }

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
